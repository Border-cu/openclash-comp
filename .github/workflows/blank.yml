name: Build OpenClash for OpenWrt 23.05.5 on arm64 v8

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Free disk space
        run: |
          sudo apt-get clean
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /usr/share/swift
          df -h

      - name: Enable universe repository
        run: |
          sudo add-apt-repository universe
          sudo apt-get update

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential flex bison g++ gawk gcc-multilib g++-multilib gettext git \
            libfuse-dev libncurses5-dev libssl-dev python3 python3-pip python3-ply \
            python3-pyelftools rsync unzip zlib1g-dev file wget subversion patch \
            upx-ucl autoconf automake curl asciidoc binutils bzip2 lib32gcc-s1 \
            libc6-dev-i386 uglifyjs msmtp texinfo libreadline-dev libglib2.0-dev \
            xmlto libelf-dev libtool autopoint antlr3 gperf ccache swig coreutils \
            haveged scons libpython3-dev jq \
            libpam-dev liblzma-dev libsnmp-dev

      - name: Clone OpenWrt source
        run: |
          git clone --depth=1 -b v23.05.5 https://github.com/openwrt/openwrt.git openwrt-source
          cd openwrt-source
          # 明确arm64目标配置
          echo "TARGET=armvirt" >> target.mk
          echo "SUBTARGET=64" >> target.mk
          echo "PROFILE=generic" >> target.mk

      - name: Clone OpenClash source
        run: |
          cd openwrt-source
          mkdir -p feeds/packages/net
          git clone --depth=1 https://github.com/vernesong/OpenClash.git feeds/packages/net/openclash

      - name: Update feeds
        run: |
          cd openwrt-source
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Configure build (arm64 v8)
        run: |
          cd openwrt-source
          # 清除旧配置并生成干净的默认配置
          make distclean
          make defconfig ARCH=arm64 SUBARCH=arm64 TARGET=armvirt SUBTARGET=64 PROFILE=generic
          
          # 禁用有依赖问题的包
          cat >> .config << 'EOF'
          # 禁用依赖libpam的包
          CONFIG_PACKAGE_busybox-pam=n
          CONFIG_PACKAGE_policycoreutils=n
          # 禁用依赖liblzma的包
          CONFIG_PACKAGE_kexec-tools=n
          # 禁用依赖libnetsnmp的包
          CONFIG_PACKAGE_lldpd=n
          # 禁用可能导致依赖问题的其他包
          CONFIG_PACKAGE_pam=n
          CONFIG_PACKAGE_lzma-utils=n
          CONFIG_PACKAGE_net-snmp=n
          EOF
          
          # 启用OpenClash及必要依赖
          echo "CONFIG_PACKAGE_openclash=y" >> .config
          echo "CONFIG_PACKAGE_kmod-tun=y" >> .config
          echo "CONFIG_PACKAGE_kmod-iptables=y" >> .config
          echo "CONFIG_PACKAGE_kmod-nftables=y" >> .config
          echo "CONFIG_PACKAGE_kmod-inet-diag=y" >> .config
          echo "CONFIG_PACKAGE_kmod-nf-conntrack=y" >> .config
          echo "CONFIG_PACKAGE_kmod-nf-nat=y" >> .config
          
          # 同步配置文件
          make oldconfig

      - name: Show build configuration (调试用)
        run: |
          cd openwrt-source
          echo "=== OpenWrt构建配置 ==="
          # 改用cat直接查看配置文件，避免printconfig命令失败
          cat .config | grep -E "ARCH|SUBARCH|TARGET|CONFIG_PACKAGE_openclash"
          ls -la .config

      - name: Build OpenWrt with OpenClash
        run: |
          cd openwrt-source
          # 首次编译不使用并行，确保配置正确
          make -j1 V=s \
            ARCH=arm64 \
            SUBARCH=arm64 \
            TARGET=armvirt \
            SUBTARGET=64 \
            PROFILE=generic || make -j1 V=s IGNORE_ERRORS=1
          # 成功后再使用并行编译加速
          make -j$(nproc) V=s \
            ARCH=arm64 \
            SUBARCH=arm64 \
            TARGET=armvirt \
            SUBTARGET=64 \
            PROFILE=generic

      - name: Upload build artifacts (arm64专用路径)
        uses: actions/upload-artifact@v4
        with:
          name: openclash-ipk-and-kmods
          path: |
            openwrt-source/bin/packages/aarch64_cortex-a57/openclash_*.ipk
            openwrt-source/bin/packages/aarch64_cortex-a57/kmod-*.ipk
            openwrt-source/bin/targets/armvirt/64/packages/openclash_*.ipk
            openwrt-source/bin/targets/armvirt/64/packages/kmod-*.ipk
          retention-days: 7

      - name: List built packages (调试用)
        run: |
          cd openwrt-source
          echo "=== 编译生成的arm64软件包 ==="
          find bin -name "*.ipk" | grep -E "arm64|aarch64" || echo "未找到arm64软件包"
          echo "=== OpenClash相关软件包 ==="
          find bin -name "openclash*.ipk" || echo "未找到OpenClash软件包"
